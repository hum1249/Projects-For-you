name: Deploy to EC2

on:
  push:
    branches:
      - django-branch  # Trigger on push to the django-branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

    - name: Deploy to EC2
      env:
        EC2_USER: ${{ secrets.EC2_USER }}
        EC2_HOST: ${{ secrets.EC2_HOST }}
      run: |
        ssh -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << 'EOF'

        # Update system and install Python, pip, and NGINX
        sudo yum update -y
        sudo yum install python3 python3-pip nginx -y

        # Allow HTTP traffic through Security Group (optional step if not already configured)
        INSTANCE_ID=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)
        REGION=$(curl -s http://169.254.169.254/latest/meta-data/placement/region)
        GROUP_ID=$(aws ec2 describe-instances --instance-id $INSTANCE_ID --region $REGION --query "Reservations[0].Instances[0].SecurityGroups[0].GroupId" --output text)
        aws ec2 authorize-security-group-ingress --group-id $GROUP_ID --protocol tcp --port 80 --cidr 0.0.0.0/0 || true

        # Clone the repository if missing
        if [ ! -d "Projects-For-you" ]; then
            git clone https://github.com/hum1249/Projects-For-you.git
        fi
        cd Projects-For-you
        git checkout django-branch
        git pull origin django-branch

        # Create and activate the virtual environment named 'myenv'
        if [ ! -d "myenv" ]; then
            python3 -m venv myenv
        fi
        source myenv/bin/activate

        # Install dependencies
        pip install --upgrade pip
        pip install -r Bachha_project/requirement.txt

        # Update ALLOWED_HOSTS in Django settings dynamically
        PUBLIC_IP=$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4)
        sed -i "s/ALLOWED_HOSTS = .*/ALLOWED_HOSTS = ['127.0.0.1', '\$PUBLIC_IP']/" Bachha_project/Bachha_project/settings.py

        # Apply database migrations
        cd Bachha_project
        python manage.py migrate

        # Restart the Django development server
        echo "Restarting the Django development server..."
        pkill -f runserver || true
        nohup python manage.py runserver 0.0.0.0:8000 > server.log 2>&1 &

        # Configure NGINX to serve Django on port 80
        sudo bash -c 'cat > /etc/nginx/conf.d/django.conf << "NGINXCONF"
        server {
            listen 80;
            server_name _;
            location / {
                proxy_pass http://127.0.0.1:8000;
                proxy_set_header Host \$host;
                proxy_set_header X-Real-IP \$remote_addr;
                proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
            }
        }
        NGINXCONF'
        sudo systemctl restart nginx
        EOF
